---
ID: "d40c1704-52f6-437b-8cc3-181e53252387"
Parent: "34139121-7df7-4907-a0b9-373980a4474e"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Reflector/Module/Content Editor/Ribbon/Home/Insert/New Content Type
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: office/32x32/files_statically.png
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Type: Rules
  Value: |
    <ruleset>
      <rule
        uid="{A156A143-83C9-4500-B5E2-0545EB854485}"
        name="Only show for content and media">
        <conditions>
          <condition
            id="{7D5DA661-BEF9-441C-B1F7-D80DE3E0972F}"
            uid="6358849B4EBA4BC1AC436DBC7146B4E2"
            itemid="{0DE95AE4-41AB-4D01-9EB0-67441B7C2450}" />
        </conditions>
      </rule>
    </ruleset>
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    [System.Reflection.Assembly]::LoadWithPartialName("Hackathon.Foundation.Reflector")
    
    Import-Function Add-Reflector-Module
    
    $dialogParams = @{
    	Title = "SXA Reflector"
    	Description = "Fill out the fields to add a new component."
    	OkButtonName = "Continue"
    	CancelButtonName = "Close"
    	Width = 600
    	Height = 750
    	ShowHints = $true
    	Parameters = @(
    		@{
    			Name = "contentTypeName"
    			Title = "Item Type"
    			Placeholder = "Name of the type of item"
    			Tooltip = "Enter the name of the type of item you are looking to create"
    			Mandatory = $true
    		}
    		@{
    			Name = "pageTemplate"
    			Title = "Page Template"
    			Editor = "droptree"
    			Source = "DataSource=/sitecore/templates/Project&DatabaseName=master"
    			Tooltip = "Select a page template from tree"
    			Mandatory = $true
    		}
    		@{
    			Name = "baseTemplates"
    			Title = "Base Templates"
    			Editor = "treelist"
    			Source = "DataSource=/sitecore/templates/Feature&DatabaseName=master"
    			Tooltip = "Select one or more base templates from tree"
    		}
    		@{
    			Name = "fieldCount"
    			Title = "Number of Fields"
    			Placeholder = "Number of fields you want to add"
    			Tooltip = "Enter the number of fields you want to add to your custom item"
    		}
    	)
    	Validator = {
    		$fieldCountText = $variables.fieldCount.Value
    		
    		if ($fieldCountText -notmatch '\d+') {
    			$variables.fieldCount.Error = "Please enter a number to proceed."
    		}
    	}
    }
     
    $dialogResult = Read-Variable @dialogParams
    
    if ($dialogResult -ne "ok") {
    	Exit
    }
    
    $fieldsCount = [int]$fieldCount
    $counter = 1
    
    $pattern = ""
    
    for($i = 0; $i -lt $fieldsCount; $i++){
    	
    	$fieldFormName = "Field$i"
    	$fieldTypeName = "FieldType$i"
    	
    	if($i -eq $fieldsCount – 1){
    		$pattern += '@{ Name = "'+$fieldFormName+'"; Title = "Field Name"; Mandatory = $true; Tab = "Field '+$counter+'" },`
    		@{ Name = "'+$fieldTypeName+'"; Title = "Field Type"; Editor = "droptree"; Source = "DataSource=/sitecore/system/Field types&DatabaseName=core"; Mandatory = $true; Tooltip = "Select from dropdown tree"; Tab = "Field '+$counter+'" }'
    	}else{
    		$pattern += '@{ Name = "'+$fieldFormName+'"; Title = "Field Name"; Mandatory = $true; Tab = "Field '+$counter+'" },`
    		@{ Name = "'+$fieldTypeName+'"; Title = "Field Type"; Editor = "droptree"; Source = "DataSource=/sitecore/system/Field types&DatabaseName=core"; Mandatory = $true; Tooltip = "Select from dropdown tree"; Tab = "Field '+$counter+'" },'
    	}
    	$counter++
    }
    
    $convert = Invoke-Expression $pattern
    
    $dialogResult = Read-Variable –Parameters $convert –Description "Add field names" –Title "Field Names" –Width 600 –Height 650 –OkButtonName "Create" –CancelButtonName "Cancel" –ShowHints
    
    if ($dialogResult -ne "ok") {
    	Exit
    }
    
    $fieldNames = New-Object 'System.Collections.Generic.Dictionary[string,Sitecore.Data.Items.Item]'
    
    for($i = 0; $i -lt $fieldsCount; $i++){
    	
    	$fieldName = Invoke-Expression $"Field$i"
    	$fieldTypeName = Invoke-Expression $"FieldType$i"
    	
    	$fieldNames.Add($fieldName,$fieldTypeName)
    }
    
    
    $model = New-Object "Hackathon.Foundation.Reflector.Models.NewModuleModel"
    $model.ContentTypeName = $contentTypeName
    $model.PageTemplate = $pageTemplate
    $model.BaseTemplates = $baseTemplates
    $model.FieldList = $fieldNames
    
    Add-Reflector-Module $model
    
- ID: "f62c67b4-28b6-4a6f-91cb-db78cf054f4e"
  Hint: EnableRule
  Type: Rules
  Value: 
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20210306T052809Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
